.module "HelloWorld"
.entry "main()i"

define x = 30 + 4
define y = 30 + 10 - 5

section constpool

const "Test" = .class Test

const "Test::x" = .field int Test::x
const "Test::y" = .field int Test::y

const "Test::Test(ii)V" = .method void Test::Test(class Test, int, int)
const "Test::add()i" = .method int Test::add(class Test)

const "main()i" = .function int main()

section classes

class public Test:
    field public int x
    field public int y

    method public void Test(class Test, int, int)

    method public int add(class Test)

section code

function public void Test::Test(class Test, int, int):
    loadobj 0
    dup

    load 1
    putfield "Test::x"

    load 2
    putfield "Test::y"

    ret

function public int Test::add(class Test):
    loadobj 0
    getfield "Test::x"

    loadobj 0
    getfield "Test::y"

    add

    ret

function public int main():
    new "Test"

    dup
    ldi x
    ldi y
    call "Test::Test(ii)V"

    call "Test::add()i"
    debug

    hlt